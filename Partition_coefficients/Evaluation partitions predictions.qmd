---
title: "OSP partition coeff. algotihms check"
author: "Susana Proenca"
format: html
editor: visual
project:
  execute-dir: esqIVIVE
---

## Evaluation of PK-Sim partition coefficients

## Introduction

This workflow is to evaluate the OSP partition algorithms.

We are using the experimental partitioning (tissue/plasma) values collected in Pearce et al (2017) where they also report their input parameters. \[NEED TO KNOW HOW PARTITIONS WERE DERIVED, IN VIVO OR EX VIVO\]

\*for now I am excluding zwitterions. Need better curation of data to include them.

### To do

-   get ionization included-Done but need add zwitterion

-   Confirm results with PKSIM for 2 chemicals-confirm for 2,4 D but mayeb worth checking for another and the zwitterion

-   Include possibility other classes.-\[This depends on analysis on 2 -fold, are there hard deadline of frontier of logP?\]

-   If data is from in vivo pk then I need to also get the actual partitioning in vivo after IV simulation-\[For this I need to include MW and halogens as input aswell\]-But the limit permeability will be related to the clearance aswell?-check paper from utsey..Maybe I can get plasma/liver clearance

-   possibility correcting fraction unbound

-   make plots for every tissue with different lipophilicity

-   make conclusions

-   see overlap list chemicals with ONTOX-DNT and INOTIV-DNT-Anna did this, so just for ONTOX.

```{r}
#| label: Curate the experimental list
#| 

library(readxl)
library(tidyr)
library(ospsuite)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(ragg)

#read excel partitions
exp_partition_raw<-read_xlsx("10928_2017_9548_MOESM1_ESM.xlsx",sheet="Data")

#filter rat and transform columns
exp_partition<-exp_partition_raw %>%
                filter(Species == "Rat" ) %>%
                filter(A_B_N != "Z" ) %>%
                pivot_wider(names_from = Tissue,  values_from = Exp_PC ,values_fn = list(Tissue = ~!is.na(.))) %>%
                mutate(
                  Type_ionization = case_when(
                  A_B_N == "A" ~ -1,
                  A_B_N== "B" ~ 1,
                  A_B_N == "N" ~ 0 )) %>%
                  mutate( A_B_N = case_when(
                      A_B_N == "A" ~ "acid",
                      A_B_N== "B" ~ "base",
                      A_B_N == "N" ~ "neutral"
                      ))

exp_partition<-exp_partition %>% group_by(Drug) %>%
                summarise(across(c(CAS,A_B_N,Type_ionization,Effect_pKa), ~first(na.omit(.x))),
                across(c(LogP,logMA,fu,
                                 Brain,Gut,Kidney,Liver,Muscle,Pancreas
                                 ,Spleen,Adipose,Blood_Cells ,Bone,Heart,Lung
                                  ,Skin,Testis,Thymus,Stomach,Blood_Cells)
                                 , ~mean(.x, na.rm = TRUE))) %>%
                mutate(logMA=ifelse(is.na(logMA),1.294+0.304*LogP,logMA))
```

First characterize chemical space in dataset. \[What is their logMA based on? Some values I need to replace form Yu\].

\[Get ONTOX overlap list\]

```{r}
View(exp_partition)
LogP_hist<-ggplot(data=exp_partition,aes(y=LogP, x=factor(A_B_N),col=A_B_N))+
geom_jitter(position=position_jitter(0.1)) 

LogMA_hist<-ggplot(data=exp_partition,aes(y=logMA, x=factor(A_B_N),color=A_B_N))+
geom_jitter(position=position_jitter(0.1)) 

Fu_lip<-ggplot(data=exp_partition,)+
geom_point(aes(y=LogP,x=fu,color=A_B_N,fill=A_B_N))+
scale_x_log10(limits = c(0.0001, 1))

ggarrange(LogP_hist,LogMA_hist,Fu_hist)
```

Make simulations for the partitions based on different partition coefficients and input values

```{r}

source("Partition functions.R")
source("function_plots_partition.R")

#function to run model per choice of lipophlciity, how ionization is considered and #tissue

getplots_r2<-function(lipo_param,ionization_param){
 
  lipophilicity<-lipo_param
  ionization=ionization_param
  Berez_model<-Rat_model("Berez",lipophilicity,ionization)
  
  PK_Sim_model<-Rat_model("PKSim",lipophilicity,
                          ionization)
  Poulin_model<-Rat_model("Poulin",lipophilicity,
                          ionization)
  RR_model<-Rat_model("Rodger_Rowland",lipophilicity,
                      ionization)
  Schmitt_model<-Rat_model("Schmitt",lipophilicity,
                           ionization)

  #for first tissue 
  Brain_data<-plot_tissue("Brain",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Adipose_data<-plot_tissue("Adipose",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Liver_data<-plot_tissue("Liver",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Kidney_data<-plot_tissue("Kidney",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Heart_data<-plot_tissue("Heart",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Gut_data<-plot_tissue("Gut",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Muscle_data<-plot_tissue("Muscle",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Pancreas_data<-plot_tissue("Pancreas",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Spleen_data<-plot_tissue("Spleen",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Lung_data<-plot_tissue("Lung",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Skin_data<-plot_tissue("Skin",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Bone_data<-plot_tissue("Bone",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Testis_data<-plot_tissue("Testis",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  Blood_Cells_data<-plot_tissue("Blood_Cells",Berez_model,PK_Sim_model,Poulin_model,RR_model,Schmitt_model)
  
  Berez_model<-0
  PK_Sim_model<-0
  Poulin_model<-0
  RR_model<-0
  Schmitt_model<-0
  
  alltissuedata<-list("Brain"=Brain_data,
                      "Adipose"=Adipose_data,
                      "Liver"=Liver_data,
                      "Kidney"=Kidney_data,
                      "Heart"=Heart_data,
                      "Gut"=Gut_data,
                      "Muscle"=Muscle_data,
                      "Pancreas"=Pancreas_data,
                      "Spleen"=Spleen_data,
                      "Lung"=Lung_data,
                      "Skin"=Skin_data,
                      "Bone"=Bone_data,
                      "Testis"=Testis_data,
                      "Blood_Cells"=Blood_Cells_data)
  return(alltissuedata)}


#call function with the options of interest, it takes a few minutes each 
LogP_NoIonization<-getplots_r2(lipo_param ="LogP",ionization_param="ignored")
LogMA_NoIonization<-getplots_r2(lipo_param ="LogMA",ionization_param="ignored")
LogP_Ionization<-getplots_r2(lipo_param ="LogP",ionization_param="considered")
LogMA_Ionization<-getplots_r2(lipo_param ="LogMA",ionization_param="considered")


```

## Evaluation Muscle

```{r}
LogP_NoIonization[["Muscle"]]


```

```{r}
LogMA_NoIonization[["Muscle"]]
```

```{r}
LogP_Ionization[["Muscle"]]
```

```{r}
LogMA_Ionization[["Muscle"]]
```

-   The best methods for acids is RR method using logMA.

-   The best methods for bases is RR method using logMA.

-   The best methods for neutrals is RR method using logP actually and ionization obviously does not make a difference.

-   The best methods for high lipophilic is using logP instead of logMA and no ionization but predictions are worst than neutrals.

-   The best methods for chemicals of middle lipophilicicity (1-4.5) is logMA and including ionization.

### General conclusions

pKa is not included in Berez, PK-Sim and Poulin so it does not make a difference. However it does
